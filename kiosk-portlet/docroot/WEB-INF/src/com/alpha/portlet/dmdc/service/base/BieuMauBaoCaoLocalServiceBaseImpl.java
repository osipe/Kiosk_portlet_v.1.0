/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.alpha.portlet.dmdc.service.base;

import com.alpha.portlet.dmdc.model.BieuMauBaoCao;
import com.alpha.portlet.dmdc.service.BieuMauBaoCaoLocalService;
import com.alpha.portlet.dmdc.service.persistence.BieuMauBaoCaoPersistence;
import com.alpha.portlet.dmdc.service.persistence.CauHinhPersistence;
import com.alpha.portlet.dmdc.service.persistence.FileDinhKemPersistence;
import com.alpha.portlet.dmdc.service.persistence.PhanQuyenFinder;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the bieu mau bao cao local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.alpha.portlet.dmdc.service.impl.BieuMauBaoCaoLocalServiceImpl}.
 * </p>
 *
 * @author darkn
 * @see com.alpha.portlet.dmdc.service.impl.BieuMauBaoCaoLocalServiceImpl
 * @see com.alpha.portlet.dmdc.service.BieuMauBaoCaoLocalServiceUtil
 * @generated
 */
public abstract class BieuMauBaoCaoLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements BieuMauBaoCaoLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.alpha.portlet.dmdc.service.BieuMauBaoCaoLocalServiceUtil} to access the bieu mau bao cao local service.
	 */

	/**
	 * Adds the bieu mau bao cao to the database. Also notifies the appropriate model listeners.
	 *
	 * @param bieuMauBaoCao the bieu mau bao cao
	 * @return the bieu mau bao cao that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public BieuMauBaoCao addBieuMauBaoCao(BieuMauBaoCao bieuMauBaoCao)
		throws SystemException {
		bieuMauBaoCao.setNew(true);

		return bieuMauBaoCaoPersistence.update(bieuMauBaoCao);
	}

	/**
	 * Creates a new bieu mau bao cao with the primary key. Does not add the bieu mau bao cao to the database.
	 *
	 * @param bieuMauBaoCaoId the primary key for the new bieu mau bao cao
	 * @return the new bieu mau bao cao
	 */
	@Override
	public BieuMauBaoCao createBieuMauBaoCao(long bieuMauBaoCaoId) {
		return bieuMauBaoCaoPersistence.create(bieuMauBaoCaoId);
	}

	/**
	 * Deletes the bieu mau bao cao with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param bieuMauBaoCaoId the primary key of the bieu mau bao cao
	 * @return the bieu mau bao cao that was removed
	 * @throws PortalException if a bieu mau bao cao with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public BieuMauBaoCao deleteBieuMauBaoCao(long bieuMauBaoCaoId)
		throws PortalException, SystemException {
		return bieuMauBaoCaoPersistence.remove(bieuMauBaoCaoId);
	}

	/**
	 * Deletes the bieu mau bao cao from the database. Also notifies the appropriate model listeners.
	 *
	 * @param bieuMauBaoCao the bieu mau bao cao
	 * @return the bieu mau bao cao that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public BieuMauBaoCao deleteBieuMauBaoCao(BieuMauBaoCao bieuMauBaoCao)
		throws SystemException {
		return bieuMauBaoCaoPersistence.remove(bieuMauBaoCao);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(BieuMauBaoCao.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return bieuMauBaoCaoPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.alpha.portlet.dmdc.model.impl.BieuMauBaoCaoModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return bieuMauBaoCaoPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.alpha.portlet.dmdc.model.impl.BieuMauBaoCaoModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return bieuMauBaoCaoPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return bieuMauBaoCaoPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return bieuMauBaoCaoPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public BieuMauBaoCao fetchBieuMauBaoCao(long bieuMauBaoCaoId)
		throws SystemException {
		return bieuMauBaoCaoPersistence.fetchByPrimaryKey(bieuMauBaoCaoId);
	}

	/**
	 * Returns the bieu mau bao cao with the primary key.
	 *
	 * @param bieuMauBaoCaoId the primary key of the bieu mau bao cao
	 * @return the bieu mau bao cao
	 * @throws PortalException if a bieu mau bao cao with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public BieuMauBaoCao getBieuMauBaoCao(long bieuMauBaoCaoId)
		throws PortalException, SystemException {
		return bieuMauBaoCaoPersistence.findByPrimaryKey(bieuMauBaoCaoId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return bieuMauBaoCaoPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the bieu mau bao caos.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.alpha.portlet.dmdc.model.impl.BieuMauBaoCaoModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of bieu mau bao caos
	 * @param end the upper bound of the range of bieu mau bao caos (not inclusive)
	 * @return the range of bieu mau bao caos
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<BieuMauBaoCao> getBieuMauBaoCaos(int start, int end)
		throws SystemException {
		return bieuMauBaoCaoPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of bieu mau bao caos.
	 *
	 * @return the number of bieu mau bao caos
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getBieuMauBaoCaosCount() throws SystemException {
		return bieuMauBaoCaoPersistence.countAll();
	}

	/**
	 * Updates the bieu mau bao cao in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param bieuMauBaoCao the bieu mau bao cao
	 * @return the bieu mau bao cao that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public BieuMauBaoCao updateBieuMauBaoCao(BieuMauBaoCao bieuMauBaoCao)
		throws SystemException {
		return bieuMauBaoCaoPersistence.update(bieuMauBaoCao);
	}

	/**
	 * Returns the bieu mau bao cao local service.
	 *
	 * @return the bieu mau bao cao local service
	 */
	public com.alpha.portlet.dmdc.service.BieuMauBaoCaoLocalService getBieuMauBaoCaoLocalService() {
		return bieuMauBaoCaoLocalService;
	}

	/**
	 * Sets the bieu mau bao cao local service.
	 *
	 * @param bieuMauBaoCaoLocalService the bieu mau bao cao local service
	 */
	public void setBieuMauBaoCaoLocalService(
		com.alpha.portlet.dmdc.service.BieuMauBaoCaoLocalService bieuMauBaoCaoLocalService) {
		this.bieuMauBaoCaoLocalService = bieuMauBaoCaoLocalService;
	}

	/**
	 * Returns the bieu mau bao cao remote service.
	 *
	 * @return the bieu mau bao cao remote service
	 */
	public com.alpha.portlet.dmdc.service.BieuMauBaoCaoService getBieuMauBaoCaoService() {
		return bieuMauBaoCaoService;
	}

	/**
	 * Sets the bieu mau bao cao remote service.
	 *
	 * @param bieuMauBaoCaoService the bieu mau bao cao remote service
	 */
	public void setBieuMauBaoCaoService(
		com.alpha.portlet.dmdc.service.BieuMauBaoCaoService bieuMauBaoCaoService) {
		this.bieuMauBaoCaoService = bieuMauBaoCaoService;
	}

	/**
	 * Returns the bieu mau bao cao persistence.
	 *
	 * @return the bieu mau bao cao persistence
	 */
	public BieuMauBaoCaoPersistence getBieuMauBaoCaoPersistence() {
		return bieuMauBaoCaoPersistence;
	}

	/**
	 * Sets the bieu mau bao cao persistence.
	 *
	 * @param bieuMauBaoCaoPersistence the bieu mau bao cao persistence
	 */
	public void setBieuMauBaoCaoPersistence(
		BieuMauBaoCaoPersistence bieuMauBaoCaoPersistence) {
		this.bieuMauBaoCaoPersistence = bieuMauBaoCaoPersistence;
	}

	/**
	 * Returns the cau hinh local service.
	 *
	 * @return the cau hinh local service
	 */
	public com.alpha.portlet.dmdc.service.CauHinhLocalService getCauHinhLocalService() {
		return cauHinhLocalService;
	}

	/**
	 * Sets the cau hinh local service.
	 *
	 * @param cauHinhLocalService the cau hinh local service
	 */
	public void setCauHinhLocalService(
		com.alpha.portlet.dmdc.service.CauHinhLocalService cauHinhLocalService) {
		this.cauHinhLocalService = cauHinhLocalService;
	}

	/**
	 * Returns the cau hinh remote service.
	 *
	 * @return the cau hinh remote service
	 */
	public com.alpha.portlet.dmdc.service.CauHinhService getCauHinhService() {
		return cauHinhService;
	}

	/**
	 * Sets the cau hinh remote service.
	 *
	 * @param cauHinhService the cau hinh remote service
	 */
	public void setCauHinhService(
		com.alpha.portlet.dmdc.service.CauHinhService cauHinhService) {
		this.cauHinhService = cauHinhService;
	}

	/**
	 * Returns the cau hinh persistence.
	 *
	 * @return the cau hinh persistence
	 */
	public CauHinhPersistence getCauHinhPersistence() {
		return cauHinhPersistence;
	}

	/**
	 * Sets the cau hinh persistence.
	 *
	 * @param cauHinhPersistence the cau hinh persistence
	 */
	public void setCauHinhPersistence(CauHinhPersistence cauHinhPersistence) {
		this.cauHinhPersistence = cauHinhPersistence;
	}

	/**
	 * Returns the file dinh kem local service.
	 *
	 * @return the file dinh kem local service
	 */
	public com.alpha.portlet.dmdc.service.FileDinhKemLocalService getFileDinhKemLocalService() {
		return fileDinhKemLocalService;
	}

	/**
	 * Sets the file dinh kem local service.
	 *
	 * @param fileDinhKemLocalService the file dinh kem local service
	 */
	public void setFileDinhKemLocalService(
		com.alpha.portlet.dmdc.service.FileDinhKemLocalService fileDinhKemLocalService) {
		this.fileDinhKemLocalService = fileDinhKemLocalService;
	}

	/**
	 * Returns the file dinh kem remote service.
	 *
	 * @return the file dinh kem remote service
	 */
	public com.alpha.portlet.dmdc.service.FileDinhKemService getFileDinhKemService() {
		return fileDinhKemService;
	}

	/**
	 * Sets the file dinh kem remote service.
	 *
	 * @param fileDinhKemService the file dinh kem remote service
	 */
	public void setFileDinhKemService(
		com.alpha.portlet.dmdc.service.FileDinhKemService fileDinhKemService) {
		this.fileDinhKemService = fileDinhKemService;
	}

	/**
	 * Returns the file dinh kem persistence.
	 *
	 * @return the file dinh kem persistence
	 */
	public FileDinhKemPersistence getFileDinhKemPersistence() {
		return fileDinhKemPersistence;
	}

	/**
	 * Sets the file dinh kem persistence.
	 *
	 * @param fileDinhKemPersistence the file dinh kem persistence
	 */
	public void setFileDinhKemPersistence(
		FileDinhKemPersistence fileDinhKemPersistence) {
		this.fileDinhKemPersistence = fileDinhKemPersistence;
	}

	/**
	 * Returns the phan quyen local service.
	 *
	 * @return the phan quyen local service
	 */
	public com.alpha.portlet.dmdc.service.PhanQuyenLocalService getPhanQuyenLocalService() {
		return phanQuyenLocalService;
	}

	/**
	 * Sets the phan quyen local service.
	 *
	 * @param phanQuyenLocalService the phan quyen local service
	 */
	public void setPhanQuyenLocalService(
		com.alpha.portlet.dmdc.service.PhanQuyenLocalService phanQuyenLocalService) {
		this.phanQuyenLocalService = phanQuyenLocalService;
	}

	/**
	 * Returns the phan quyen remote service.
	 *
	 * @return the phan quyen remote service
	 */
	public com.alpha.portlet.dmdc.service.PhanQuyenService getPhanQuyenService() {
		return phanQuyenService;
	}

	/**
	 * Sets the phan quyen remote service.
	 *
	 * @param phanQuyenService the phan quyen remote service
	 */
	public void setPhanQuyenService(
		com.alpha.portlet.dmdc.service.PhanQuyenService phanQuyenService) {
		this.phanQuyenService = phanQuyenService;
	}

	/**
	 * Returns the phan quyen finder.
	 *
	 * @return the phan quyen finder
	 */
	public PhanQuyenFinder getPhanQuyenFinder() {
		return phanQuyenFinder;
	}

	/**
	 * Sets the phan quyen finder.
	 *
	 * @param phanQuyenFinder the phan quyen finder
	 */
	public void setPhanQuyenFinder(PhanQuyenFinder phanQuyenFinder) {
		this.phanQuyenFinder = phanQuyenFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.alpha.portlet.dmdc.model.BieuMauBaoCao",
			bieuMauBaoCaoLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.alpha.portlet.dmdc.model.BieuMauBaoCao");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return BieuMauBaoCao.class;
	}

	protected String getModelClassName() {
		return BieuMauBaoCao.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = bieuMauBaoCaoPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.alpha.portlet.dmdc.service.BieuMauBaoCaoLocalService.class)
	protected com.alpha.portlet.dmdc.service.BieuMauBaoCaoLocalService bieuMauBaoCaoLocalService;
	@BeanReference(type = com.alpha.portlet.dmdc.service.BieuMauBaoCaoService.class)
	protected com.alpha.portlet.dmdc.service.BieuMauBaoCaoService bieuMauBaoCaoService;
	@BeanReference(type = BieuMauBaoCaoPersistence.class)
	protected BieuMauBaoCaoPersistence bieuMauBaoCaoPersistence;
	@BeanReference(type = com.alpha.portlet.dmdc.service.CauHinhLocalService.class)
	protected com.alpha.portlet.dmdc.service.CauHinhLocalService cauHinhLocalService;
	@BeanReference(type = com.alpha.portlet.dmdc.service.CauHinhService.class)
	protected com.alpha.portlet.dmdc.service.CauHinhService cauHinhService;
	@BeanReference(type = CauHinhPersistence.class)
	protected CauHinhPersistence cauHinhPersistence;
	@BeanReference(type = com.alpha.portlet.dmdc.service.FileDinhKemLocalService.class)
	protected com.alpha.portlet.dmdc.service.FileDinhKemLocalService fileDinhKemLocalService;
	@BeanReference(type = com.alpha.portlet.dmdc.service.FileDinhKemService.class)
	protected com.alpha.portlet.dmdc.service.FileDinhKemService fileDinhKemService;
	@BeanReference(type = FileDinhKemPersistence.class)
	protected FileDinhKemPersistence fileDinhKemPersistence;
	@BeanReference(type = com.alpha.portlet.dmdc.service.PhanQuyenLocalService.class)
	protected com.alpha.portlet.dmdc.service.PhanQuyenLocalService phanQuyenLocalService;
	@BeanReference(type = com.alpha.portlet.dmdc.service.PhanQuyenService.class)
	protected com.alpha.portlet.dmdc.service.PhanQuyenService phanQuyenService;
	@BeanReference(type = PhanQuyenFinder.class)
	protected PhanQuyenFinder phanQuyenFinder;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private BieuMauBaoCaoLocalServiceClpInvoker _clpInvoker = new BieuMauBaoCaoLocalServiceClpInvoker();
}