/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.alpha.portlet.danh_muc.model.impl;

import com.alpha.portlet.danh_muc.model.LinhVuc;
import com.alpha.portlet.danh_muc.model.LinhVucModel;
import com.alpha.portlet.danh_muc.model.LinhVucSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LinhVuc service. Represents a row in the &quot;alpha_dm_linhvuc&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.alpha.portlet.danh_muc.model.LinhVucModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LinhVucImpl}.
 * </p>
 *
 * @author darkn
 * @see LinhVucImpl
 * @see com.alpha.portlet.danh_muc.model.LinhVuc
 * @see com.alpha.portlet.danh_muc.model.LinhVucModel
 * @generated
 */
@JSON(strict = true)
public class LinhVucModelImpl extends BaseModelImpl<LinhVuc>
	implements LinhVucModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a linh vuc model instance should use the {@link com.alpha.portlet.danh_muc.model.LinhVuc} interface instead.
	 */
	public static final String TABLE_NAME = "alpha_dm_linhvuc";
	public static final Object[][] TABLE_COLUMNS = {
			{ "linhVucId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ten", Types.VARCHAR },
			{ "ma", Types.VARCHAR },
			{ "moTa", Types.VARCHAR },
			{ "hoatDong", Types.BOOLEAN },
			{ "doUuTien", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table alpha_dm_linhvuc (linhVucId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,ten VARCHAR(75) null,ma VARCHAR(75) null,moTa VARCHAR(75) null,hoatDong BOOLEAN,doUuTien INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table alpha_dm_linhvuc";
	public static final String ORDER_BY_JPQL = " ORDER BY linhVuc.linhVucId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY alpha_dm_linhvuc.linhVucId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.alpha.portlet.danh_muc.model.LinhVuc"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.alpha.portlet.danh_muc.model.LinhVuc"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.alpha.portlet.danh_muc.model.LinhVuc"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long HOATDONG_COLUMN_BITMASK = 4L;
	public static long MA_COLUMN_BITMASK = 8L;
	public static long LINHVUCID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LinhVuc toModel(LinhVucSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LinhVuc model = new LinhVucImpl();

		model.setLinhVucId(soapModel.getLinhVucId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTen(soapModel.getTen());
		model.setMa(soapModel.getMa());
		model.setMoTa(soapModel.getMoTa());
		model.setHoatDong(soapModel.getHoatDong());
		model.setDoUuTien(soapModel.getDoUuTien());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LinhVuc> toModels(LinhVucSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LinhVuc> models = new ArrayList<LinhVuc>(soapModels.length);

		for (LinhVucSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.alpha.portlet.danh_muc.model.LinhVuc"));

	public LinhVucModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _linhVucId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLinhVucId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _linhVucId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LinhVuc.class;
	}

	@Override
	public String getModelClassName() {
		return LinhVuc.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("linhVucId", getLinhVucId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ten", getTen());
		attributes.put("ma", getMa());
		attributes.put("moTa", getMoTa());
		attributes.put("hoatDong", getHoatDong());
		attributes.put("doUuTien", getDoUuTien());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long linhVucId = (Long)attributes.get("linhVucId");

		if (linhVucId != null) {
			setLinhVucId(linhVucId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String ten = (String)attributes.get("ten");

		if (ten != null) {
			setTen(ten);
		}

		String ma = (String)attributes.get("ma");

		if (ma != null) {
			setMa(ma);
		}

		String moTa = (String)attributes.get("moTa");

		if (moTa != null) {
			setMoTa(moTa);
		}

		Boolean hoatDong = (Boolean)attributes.get("hoatDong");

		if (hoatDong != null) {
			setHoatDong(hoatDong);
		}

		Integer doUuTien = (Integer)attributes.get("doUuTien");

		if (doUuTien != null) {
			setDoUuTien(doUuTien);
		}
	}

	@JSON
	@Override
	public long getLinhVucId() {
		return _linhVucId;
	}

	@Override
	public void setLinhVucId(long linhVucId) {
		_columnBitmask = -1L;

		_linhVucId = linhVucId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTen() {
		if (_ten == null) {
			return StringPool.BLANK;
		}
		else {
			return _ten;
		}
	}

	@Override
	public void setTen(String ten) {
		_ten = ten;
	}

	@JSON
	@Override
	public String getMa() {
		if (_ma == null) {
			return StringPool.BLANK;
		}
		else {
			return _ma;
		}
	}

	@Override
	public void setMa(String ma) {
		_columnBitmask |= MA_COLUMN_BITMASK;

		if (_originalMa == null) {
			_originalMa = _ma;
		}

		_ma = ma;
	}

	public String getOriginalMa() {
		return GetterUtil.getString(_originalMa);
	}

	@JSON
	@Override
	public String getMoTa() {
		if (_moTa == null) {
			return StringPool.BLANK;
		}
		else {
			return _moTa;
		}
	}

	@Override
	public void setMoTa(String moTa) {
		_moTa = moTa;
	}

	@JSON
	@Override
	public boolean getHoatDong() {
		return _hoatDong;
	}

	@Override
	public boolean isHoatDong() {
		return _hoatDong;
	}

	@Override
	public void setHoatDong(boolean hoatDong) {
		_columnBitmask |= HOATDONG_COLUMN_BITMASK;

		if (!_setOriginalHoatDong) {
			_setOriginalHoatDong = true;

			_originalHoatDong = _hoatDong;
		}

		_hoatDong = hoatDong;
	}

	public boolean getOriginalHoatDong() {
		return _originalHoatDong;
	}

	@JSON
	@Override
	public int getDoUuTien() {
		return _doUuTien;
	}

	@Override
	public void setDoUuTien(int doUuTien) {
		_doUuTien = doUuTien;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			LinhVuc.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LinhVuc toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LinhVuc)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LinhVucImpl linhVucImpl = new LinhVucImpl();

		linhVucImpl.setLinhVucId(getLinhVucId());
		linhVucImpl.setGroupId(getGroupId());
		linhVucImpl.setCompanyId(getCompanyId());
		linhVucImpl.setUserId(getUserId());
		linhVucImpl.setUserName(getUserName());
		linhVucImpl.setCreateDate(getCreateDate());
		linhVucImpl.setModifiedDate(getModifiedDate());
		linhVucImpl.setTen(getTen());
		linhVucImpl.setMa(getMa());
		linhVucImpl.setMoTa(getMoTa());
		linhVucImpl.setHoatDong(getHoatDong());
		linhVucImpl.setDoUuTien(getDoUuTien());

		linhVucImpl.resetOriginalValues();

		return linhVucImpl;
	}

	@Override
	public int compareTo(LinhVuc linhVuc) {
		int value = 0;

		if (getLinhVucId() < linhVuc.getLinhVucId()) {
			value = -1;
		}
		else if (getLinhVucId() > linhVuc.getLinhVucId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LinhVuc)) {
			return false;
		}

		LinhVuc linhVuc = (LinhVuc)obj;

		long primaryKey = linhVuc.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LinhVucModelImpl linhVucModelImpl = this;

		linhVucModelImpl._originalGroupId = linhVucModelImpl._groupId;

		linhVucModelImpl._setOriginalGroupId = false;

		linhVucModelImpl._originalCompanyId = linhVucModelImpl._companyId;

		linhVucModelImpl._setOriginalCompanyId = false;

		linhVucModelImpl._originalMa = linhVucModelImpl._ma;

		linhVucModelImpl._originalHoatDong = linhVucModelImpl._hoatDong;

		linhVucModelImpl._setOriginalHoatDong = false;

		linhVucModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LinhVuc> toCacheModel() {
		LinhVucCacheModel linhVucCacheModel = new LinhVucCacheModel();

		linhVucCacheModel.linhVucId = getLinhVucId();

		linhVucCacheModel.groupId = getGroupId();

		linhVucCacheModel.companyId = getCompanyId();

		linhVucCacheModel.userId = getUserId();

		linhVucCacheModel.userName = getUserName();

		String userName = linhVucCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			linhVucCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			linhVucCacheModel.createDate = createDate.getTime();
		}
		else {
			linhVucCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			linhVucCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			linhVucCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		linhVucCacheModel.ten = getTen();

		String ten = linhVucCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			linhVucCacheModel.ten = null;
		}

		linhVucCacheModel.ma = getMa();

		String ma = linhVucCacheModel.ma;

		if ((ma != null) && (ma.length() == 0)) {
			linhVucCacheModel.ma = null;
		}

		linhVucCacheModel.moTa = getMoTa();

		String moTa = linhVucCacheModel.moTa;

		if ((moTa != null) && (moTa.length() == 0)) {
			linhVucCacheModel.moTa = null;
		}

		linhVucCacheModel.hoatDong = getHoatDong();

		linhVucCacheModel.doUuTien = getDoUuTien();

		return linhVucCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{linhVucId=");
		sb.append(getLinhVucId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ten=");
		sb.append(getTen());
		sb.append(", ma=");
		sb.append(getMa());
		sb.append(", moTa=");
		sb.append(getMoTa());
		sb.append(", hoatDong=");
		sb.append(getHoatDong());
		sb.append(", doUuTien=");
		sb.append(getDoUuTien());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.alpha.portlet.danh_muc.model.LinhVuc");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>linhVucId</column-name><column-value><![CDATA[");
		sb.append(getLinhVucId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ten</column-name><column-value><![CDATA[");
		sb.append(getTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ma</column-name><column-value><![CDATA[");
		sb.append(getMa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moTa</column-name><column-value><![CDATA[");
		sb.append(getMoTa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hoatDong</column-name><column-value><![CDATA[");
		sb.append(getHoatDong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doUuTien</column-name><column-value><![CDATA[");
		sb.append(getDoUuTien());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LinhVuc.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LinhVuc.class
		};
	private long _linhVucId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _ten;
	private String _ma;
	private String _originalMa;
	private String _moTa;
	private boolean _hoatDong;
	private boolean _originalHoatDong;
	private boolean _setOriginalHoatDong;
	private int _doUuTien;
	private long _columnBitmask;
	private LinhVuc _escapedModel;
}