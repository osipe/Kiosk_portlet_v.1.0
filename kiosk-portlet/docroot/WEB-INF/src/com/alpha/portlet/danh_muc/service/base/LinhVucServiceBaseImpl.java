/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.alpha.portlet.danh_muc.service.base;

import com.alpha.portlet.danh_muc.model.LinhVuc;
import com.alpha.portlet.danh_muc.service.LinhVucService;
import com.alpha.portlet.danh_muc.service.persistence.LinhVucFinder;
import com.alpha.portlet.danh_muc.service.persistence.LinhVucPersistence;
import com.alpha.portlet.danh_muc.service.persistence.LoaiHoSoFinder;
import com.alpha.portlet.danh_muc.service.persistence.LoaiHoSoPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the linh vuc remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.alpha.portlet.danh_muc.service.impl.LinhVucServiceImpl}.
 * </p>
 *
 * @author darkn
 * @see com.alpha.portlet.danh_muc.service.impl.LinhVucServiceImpl
 * @see com.alpha.portlet.danh_muc.service.LinhVucServiceUtil
 * @generated
 */
public abstract class LinhVucServiceBaseImpl extends BaseServiceImpl
	implements LinhVucService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.alpha.portlet.danh_muc.service.LinhVucServiceUtil} to access the linh vuc remote service.
	 */

	/**
	 * Returns the linh vuc local service.
	 *
	 * @return the linh vuc local service
	 */
	public com.alpha.portlet.danh_muc.service.LinhVucLocalService getLinhVucLocalService() {
		return linhVucLocalService;
	}

	/**
	 * Sets the linh vuc local service.
	 *
	 * @param linhVucLocalService the linh vuc local service
	 */
	public void setLinhVucLocalService(
		com.alpha.portlet.danh_muc.service.LinhVucLocalService linhVucLocalService) {
		this.linhVucLocalService = linhVucLocalService;
	}

	/**
	 * Returns the linh vuc remote service.
	 *
	 * @return the linh vuc remote service
	 */
	public com.alpha.portlet.danh_muc.service.LinhVucService getLinhVucService() {
		return linhVucService;
	}

	/**
	 * Sets the linh vuc remote service.
	 *
	 * @param linhVucService the linh vuc remote service
	 */
	public void setLinhVucService(
		com.alpha.portlet.danh_muc.service.LinhVucService linhVucService) {
		this.linhVucService = linhVucService;
	}

	/**
	 * Returns the linh vuc persistence.
	 *
	 * @return the linh vuc persistence
	 */
	public LinhVucPersistence getLinhVucPersistence() {
		return linhVucPersistence;
	}

	/**
	 * Sets the linh vuc persistence.
	 *
	 * @param linhVucPersistence the linh vuc persistence
	 */
	public void setLinhVucPersistence(LinhVucPersistence linhVucPersistence) {
		this.linhVucPersistence = linhVucPersistence;
	}

	/**
	 * Returns the linh vuc finder.
	 *
	 * @return the linh vuc finder
	 */
	public LinhVucFinder getLinhVucFinder() {
		return linhVucFinder;
	}

	/**
	 * Sets the linh vuc finder.
	 *
	 * @param linhVucFinder the linh vuc finder
	 */
	public void setLinhVucFinder(LinhVucFinder linhVucFinder) {
		this.linhVucFinder = linhVucFinder;
	}

	/**
	 * Returns the loai ho so local service.
	 *
	 * @return the loai ho so local service
	 */
	public com.alpha.portlet.danh_muc.service.LoaiHoSoLocalService getLoaiHoSoLocalService() {
		return loaiHoSoLocalService;
	}

	/**
	 * Sets the loai ho so local service.
	 *
	 * @param loaiHoSoLocalService the loai ho so local service
	 */
	public void setLoaiHoSoLocalService(
		com.alpha.portlet.danh_muc.service.LoaiHoSoLocalService loaiHoSoLocalService) {
		this.loaiHoSoLocalService = loaiHoSoLocalService;
	}

	/**
	 * Returns the loai ho so remote service.
	 *
	 * @return the loai ho so remote service
	 */
	public com.alpha.portlet.danh_muc.service.LoaiHoSoService getLoaiHoSoService() {
		return loaiHoSoService;
	}

	/**
	 * Sets the loai ho so remote service.
	 *
	 * @param loaiHoSoService the loai ho so remote service
	 */
	public void setLoaiHoSoService(
		com.alpha.portlet.danh_muc.service.LoaiHoSoService loaiHoSoService) {
		this.loaiHoSoService = loaiHoSoService;
	}

	/**
	 * Returns the loai ho so persistence.
	 *
	 * @return the loai ho so persistence
	 */
	public LoaiHoSoPersistence getLoaiHoSoPersistence() {
		return loaiHoSoPersistence;
	}

	/**
	 * Sets the loai ho so persistence.
	 *
	 * @param loaiHoSoPersistence the loai ho so persistence
	 */
	public void setLoaiHoSoPersistence(LoaiHoSoPersistence loaiHoSoPersistence) {
		this.loaiHoSoPersistence = loaiHoSoPersistence;
	}

	/**
	 * Returns the loai ho so finder.
	 *
	 * @return the loai ho so finder
	 */
	public LoaiHoSoFinder getLoaiHoSoFinder() {
		return loaiHoSoFinder;
	}

	/**
	 * Sets the loai ho so finder.
	 *
	 * @param loaiHoSoFinder the loai ho so finder
	 */
	public void setLoaiHoSoFinder(LoaiHoSoFinder loaiHoSoFinder) {
		this.loaiHoSoFinder = loaiHoSoFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return LinhVuc.class;
	}

	protected String getModelClassName() {
		return LinhVuc.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = linhVucPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.alpha.portlet.danh_muc.service.LinhVucLocalService.class)
	protected com.alpha.portlet.danh_muc.service.LinhVucLocalService linhVucLocalService;
	@BeanReference(type = com.alpha.portlet.danh_muc.service.LinhVucService.class)
	protected com.alpha.portlet.danh_muc.service.LinhVucService linhVucService;
	@BeanReference(type = LinhVucPersistence.class)
	protected LinhVucPersistence linhVucPersistence;
	@BeanReference(type = LinhVucFinder.class)
	protected LinhVucFinder linhVucFinder;
	@BeanReference(type = com.alpha.portlet.danh_muc.service.LoaiHoSoLocalService.class)
	protected com.alpha.portlet.danh_muc.service.LoaiHoSoLocalService loaiHoSoLocalService;
	@BeanReference(type = com.alpha.portlet.danh_muc.service.LoaiHoSoService.class)
	protected com.alpha.portlet.danh_muc.service.LoaiHoSoService loaiHoSoService;
	@BeanReference(type = LoaiHoSoPersistence.class)
	protected LoaiHoSoPersistence loaiHoSoPersistence;
	@BeanReference(type = LoaiHoSoFinder.class)
	protected LoaiHoSoFinder loaiHoSoFinder;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private LinhVucServiceClpInvoker _clpInvoker = new LinhVucServiceClpInvoker();
}